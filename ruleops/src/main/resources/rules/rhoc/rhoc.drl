package rules.rhoc;

import java.util.Map;

import org.drools.ruleops.Utils;
import org.drools.ruleops.DroolsUtils;
import org.drools.ruleops.DroolsK8sClient;
import org.drools.ruleops.model.Advice;

import io.fabric8.kubernetes.api.model.ConfigMap;
import io.fabric8.kubernetes.api.model.Container;
import io.fabric8.kubernetes.api.model.ContainerPort;
import io.fabric8.kubernetes.api.model.Event;
import io.fabric8.kubernetes.api.model.PersistentVolumeClaim;
import io.fabric8.kubernetes.api.model.Pod;
import io.fabric8.kubernetes.api.model.Service;
import io.fabric8.kubernetes.api.model.ServicePort;
import io.fabric8.kubernetes.api.model.Volume;
import io.fabric8.kubernetes.api.model.apps.StatefulSet;
import io.fabric8.kubernetes.api.model.apps.StatefulSetCondition;
import io.fabric8.kubernetes.api.model.apps.Deployment;
import io.fabric8.kubernetes.api.model.apps.DeploymentCondition;
import io.fabric8.kubernetes.api.model.Quantity;

global java.lang.String arg0;

rule "Find configMap in connector namespace to enable logs"
when
  $pod : Pod( $name: metadata.name,
               metadata.labels["cos.bf2.org/connector.id"] == arg0,
               $deploymentId : metadata.labels["cos.bf2.org/deployment.id"],
                $namespace: metadata.namespace)
   $configMap: ConfigMap( metadata.name ==  "mctr-" + $deploymentId + "-configmap",  metadata.namespace == $namespace)

then
  System.out.println("Found configmap "
        + $configMap.getMetadata().getName()
        + " in namespace: " + $namespace
        + " connectorId " + arg0
        );
  if(!$configMap.getData().containsKey("override.properties")) {
      insert(new Advice("Enable logging on connector: " + arg0,
                "Run the following command:\n " +
                "\tkubectl edit configmap " + $configMap.getMetadata().getName() + " -n " + $namespace + "\n" +
                "To add inside the data:\n" +
                "override.properties: |-\n" +
                     "quarkus.log.level=DEBUG\n" +
                     "quarkus.log.min-level=DEBUG\n" +
                     "quarkus.log.category.\"org.apache\".level = DEBUG\n" +
                     "quarkus.log.category.\"org.apache\".min-level = DEBUG"));
  }
end